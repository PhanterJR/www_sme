// Transcrypt'ed from Python, 2021-04-05 14:16:17
import {AssertionError, AttributeError, BaseException, DeprecationWarning, Exception, IndexError, IterableError, KeyError, NotImplementedError, RuntimeWarning, StopIteration, UserWarning, ValueError, Warning, __JsIterator__, __PyIterator__, __Terminal__, __add__, __and__, __call__, __class__, __envir__, __eq__, __floordiv__, __ge__, __get__, __getcm__, __getitem__, __getslice__, __getsm__, __gt__, __i__, __iadd__, __iand__, __idiv__, __ijsmod__, __ilshift__, __imatmul__, __imod__, __imul__, __in__, __init__, __ior__, __ipow__, __irshift__, __isub__, __ixor__, __jsUsePyNext__, __jsmod__, __k__, __kwargtrans__, __le__, __lshift__, __lt__, __matmul__, __mergefields__, __mergekwargtrans__, __mod__, __mul__, __ne__, __neg__, __nest__, __or__, __pow__, __pragma__, __proxy__, __pyUseJsNext__, __rshift__, __setitem__, __setproperty__, __setslice__, __sort__, __specialattrib__, __sub__, __super__, __t__, __terminal__, __truediv__, __withblock__, __xor__, abs, all, any, assert, bool, bytearray, bytes, callable, chr, copy, deepcopy, delattr, dict, dir, divmod, enumerate, filter, float, getattr, hasattr, input, int, isinstance, issubclass, len, list, map, max, min, object, ord, pow, print, property, py_TypeError, py_iter, py_metatype, py_next, py_reversed, py_typeof, range, repr, round, set, setattr, sorted, str, sum, tuple, zip} from './org.transcrypt.__runtime__.js';
import * as left_bar from './phanterpwa.frontend.components.left_bar.js';
import * as codemirror from './plugins.codemirror.js';
import * as helpers from './phanterpwa.frontend.helpers.js';
import * as widgets from './phanterpwa.frontend.components.widgets.js';
import * as gatehandler from './phanterpwa.frontend.gatehandler.js';
var __name__ = 'handlers.examples';
export var DIV = helpers.XmlConstructor.tagger ('div');
export var LABEL = helpers.XmlConstructor.tagger ('label');
export var I = helpers.XmlConstructor.tagger ('i');
export var H2 = helpers.XmlConstructor.tagger ('h2');
export var FORM = helpers.XmlConstructor.tagger ('form');
export var SPAN = helpers.XmlConstructor.tagger ('span');
export var IMG = helpers.XmlConstructor.tagger ('img', true);
export var HR = helpers.XmlConstructor.tagger ('hr', true);
export var UL = helpers.XmlConstructor.tagger ('ul');
export var LI = helpers.XmlConstructor.tagger ('li');
export var INPUT = helpers.XmlConstructor.tagger ('input', true);
export var P = helpers.XmlConstructor.tagger ('p');
export var A = helpers.XmlConstructor.tagger ('a');
export var I18N = helpers.I18N;
export var CONCATENATE = helpers.CONCATENATE;
export var XML = helpers.XML;
export var XSECTION = helpers.XSECTION;
export var Index =  __class__ ('Index', [gatehandler.Handler], {
	__module__: __name__,
	get initialize () {return __get__ (this, function (self) {
		if (self.request.get_arg (0) == 'inputs') {
			self.inputs = Inputs (self);
		}
		else if (self.request.get_arg (0) == 'selects') {
			self.selects = Selects (self);
		}
		else if (self.request.get_arg (0) == 'textarea') {
			self.selects = Textarea (self);
		}
		else if (self.request.get_arg (0) == 'fontawesome') {
			self.fontawesome = FontAwesome (self);
		}
		else {
			var html = CONCATENATE (DIV (DIV (DIV (DIV ('COMPONENTES', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), __kwargtrans__ ({_class: 'phanterpwa-breadcrumb-wrapper'})), __kwargtrans__ ({_class: 'p-container'})), __kwargtrans__ ({_class: 'title_page_container card'})), DIV (DIV (DIV (DIV (DIV (I (__kwargtrans__ (dict ({'_class': 'fas fa-edit promo-icon'}))), H2 ('Input', __kwargtrans__ ({_class: 'promo-title'})), __kwargtrans__ (dict ({'_class': 'link', '_phanterpwa-way': 'components/inputs'}))), DIV ('A forma mais simples para o usuário adicionar dados em um formulário.', __kwargtrans__ ({_class: 'promo-content'})), __kwargtrans__ (dict ({'_class': 'promo-container'}))), __kwargtrans__ ({_class: 'p-col w1p100 w3p50 w4p25'})), DIV (DIV (DIV (I (__kwargtrans__ (dict ({'_class': 'far fa-caret-square-down promo-icon'}))), H2 ('Selects', __kwargtrans__ ({_class: 'promo-title'})), __kwargtrans__ (dict ({'_class': 'link', '_phanterpwa-way': 'components/selects'}))), DIV ('Confira aqui os Inputs do tipo Select, eles permintem ao usuário', ' fazer escolhas pré-definidas evitando digitar.', __kwargtrans__ ({_class: 'promo-content'})), __kwargtrans__ (dict ({'_class': 'promo-container'}))), __kwargtrans__ ({_class: 'p-col w1p100 w3p50 w4p25'})), DIV (DIV (DIV (I (__kwargtrans__ (dict ({'_class': 'fas fa-file-signature  promo-icon'}))), H2 ('Others', __kwargtrans__ ({_class: 'promo-title'})), __kwargtrans__ (dict ({'_class': 'link', '_phanterpwa-way': 'components/textarea'}))), DIV ('Estando conectado conosco alguns serviços estão disponíveis online, os que não', ' estão você terá informações de como proceder, desta ', 'forma economizar tempo e agilizar sua vida.', __kwargtrans__ ({_class: 'promo-content'})), __kwargtrans__ (dict ({'_class': 'promo-container'}))), __kwargtrans__ ({_class: 'p-col w1p100 w3p50 w4p25'})), DIV (DIV (DIV (I (__kwargtrans__ (dict ({'_class': 'fas fa-flag promo-icon'}))), H2 ('Font Awesome', __kwargtrans__ ({_class: 'promo-title'})), __kwargtrans__ (dict ({'_class': 'link', '_phanterpwa-way': 'fontawesome'}))), DIV ('Usamos os ícones da Font Awesome! ', ' Confira aqui o helpers de cada ícone free para ajudar na implementação.', '  Vale também conferir o site clicando ', A ('aqui', __kwargtrans__ ({_href: 'https://fontawesome.com/', _target: '_blank'})), '.', __kwargtrans__ ({_class: 'promo-content'})), __kwargtrans__ (dict ({'_class': 'promo-container'}))), __kwargtrans__ ({_class: 'p-col w1p100 w3p50 w4p25'})), __kwargtrans__ ({_class: 'p-row card e-padding_20'})), __kwargtrans__ ({_class: 'phanterpwa-container p-container'})));
			$ ('#main-container').html (html.jquery ());
		}
		var BackButton = left_bar.LeftBarButton ('back_localizar_aluno', 'Voltar', I (__kwargtrans__ ({_class: 'fas fa-arrow-circle-left'})), __kwargtrans__ (dict ({'_phanterpwa-way': 'components', 'position': 'top', 'ways': [(function __lambda__ (r) {
			return (r.startswith ('components/') ? true : false);
		})]})));
		window.PhanterPWA.Components ['left_bar'].add_button (BackButton);
	});}
});
export var input1_source = 'import phanterpwa.frontend.components.widgets as widgets\nimport phanterpwa.frontend.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "android",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n';
export var input2_source = 'import phanterpwa.frontend.components.widgets as widgets\nimport phanterpwa.frontend.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "shadows",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n        wear="shadows"\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n';
export var input3_source = 'import phanterpwa.frontend.components.widgets as widgets\nimport phanterpwa.frontend.helpers as helpers\n\nDIV = helpers.XmlConstructor.tagger("div")\n\nhelper_instance = DIV(\n    widgets.Input(\n        "elegant",\n        label="Label Widget",\n        placeholder="Placeholder Widget",\n        wear="elegant"\n    ),\n    _class="widget_input_example"\n)\nhelper_instance.html_to("#your-container")\n';
export var input4_source = '\n# your imports\n# your code\n\nyour_instance = widgets.Input(\n    "password",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="password"\n)\n\n# your code\n';
export var input5_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "date",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="date"\n)\n\n# your code\n';
export var input6_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "datetime",\n    label="Label Widget",\n    value="20200-02-02 03:12:33",\n    placeholder="Placeholder Widget",\n    kind="datetime"\n)\n\n# your code\n';
export var input7_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "datetime2",\n    label="Label Widget",\n    value="02/02/2020 03:12:33",\n    placeholder="Placeholder Widget",\n    kind="datetime",\n    format="dd/MM/yyyy HH:mm:ss"\n)\n\n# your code\n';
export var input8_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    icon=I(_class="fab fa-sistrix"),\n    icon_on_click=lambda: window.PhanterPWA.flash(**{"html": I18N("Fui Clicado!")})\n)\n\n# your code\n';
export var input9_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify_datetime",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="datetime",\n    icon=I(_class="far fa-calendar-alt")\n)\n\n# your code\n';
export var input10_source = '\n# your code\n\nyour_instance = widgets.Input(\n    "iconify_date",\n    label="Label Widget",\n    placeholder="Placeholder Widget",\n    kind="date",\n    icon=I(_class="far fa-calendar-alt"),\n    format="dd/MM/yyyy"\n)\n\n# your code\n';
export var Inputs =  __class__ ('Inputs', [object], {
	__module__: __name__,
	get __init__ () {return __get__ (this, function (self, gatehandler) {
		self.gatehandler = gatehandler;
		var html = CONCATENATE (DIV (DIV (DIV (DIV ('COMPONENTES', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), DIV ('INPUT', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), __kwargtrans__ ({_class: 'phanterpwa-breadcrumb-wrapper'})), __kwargtrans__ ({_class: 'p-container'})), __kwargtrans__ ({_class: 'title_page_container card'})), DIV (DIV (DIV (P (I18N ('Os inputs servem para adicionar dados ao sistema. Abaixo você verá os diferente tipos de inputs, seus estilos, sua implementação.')), H2 (I18N ('Styles (waer)')), HR (), P (I18N ('Todos os widgets possuem um estilo, atualmente estão divididos em Android, Shadows e Elegant, abaixo você poderá conferir cada um desses estilos.')), XSECTION (LABEL (I18N ('Example'), ' 01 (wear="android")'), P (I18N ('Por padrão o parâmetro wear é android, então não é necessário adicioná-lo.')), DIV (widgets.Input ('android', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget'})), __kwargtrans__ ({_class: 'widget_input_example'})), P (I18N ('Como pode ser observado no código-fonte os widgets são adicionados de forma aninhada com os helpers. O primeiro parâmetro deve ser um identificador, ou seja, um nome único que será utilizado como id.')), codemirror.CodeMirrorHelper ('codemirror1', __kwargtrans__ (dict ({'value': input1_source, 'mode': 'python', 'lineNumbers': true}))), __kwargtrans__ ({_class: 'e-padding_20'})), XSECTION (LABEL (I18N ('Example'), ' 02 (wear="shadows")'), DIV (P (I18N ("Ao adicionar no parâmetro wear o 'shadows' o estilo muda.")), widgets.Input ('shadows', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', wear: 'shadows'})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror2', __kwargtrans__ (dict ({'value': input2_source, 'mode': 'python', 'lineNumbers': true}))), __kwargtrans__ ({_class: 'e-padding_20'})), XSECTION (LABEL (I18N ('Example'), ' 03 (wear="elegant")'), DIV (widgets.Input ('elegant', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', wear: 'elegant'})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror3', __kwargtrans__ (dict ({'value': input3_source, 'mode': 'python', 'lineNumbers': true}))), __kwargtrans__ ({_class: 'e-padding_20'})), H2 (I18N ('Types (kind)')), HR (), P (I18N ('O parâmetro kind especifica o tipo de dado que será adicionado, como por exemplo o password, com isso o input não irá exibir os caracteres digitados.')), XSECTION (LABEL (I18N ('Example'), ' 01 (kind="password")'), P (I18N ('Ao digitar valores no input os reais caracteres não serão exibidos.')), DIV (widgets.Input ('password', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'password'})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror4', __kwargtrans__ (dict ({'value': input4_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 02 (kind="date")'), P (I18N ('Ao atribuir date a kind os caracteres aceitos serão números e uma máscara é exibida, por padrão é usado o padrão americano yyyy-MM-dd')), DIV (widgets.Input ('date', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'date'})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror5', __kwargtrans__ (dict ({'value': input5_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 03 (kind="datetime")'), P (I18N ('Ao atribuir datetime ao parâmetro kind terá efeito parecido com o exemplo02 porém a marcara será yyyy-MM-dd HH:mm:ss')), DIV (widgets.Input ('datetime', __kwargtrans__ ({label: 'Label Widget', value: '20200-02-02 03:12:33', placeholder: 'Placeholder Widget', kind: 'datetime'})), __kwargtrans__ ({_class: 'widget_input_example'})), P (I18N ('Observe que abaixo temos um novo parêmetro definido, o value, ele serve para adicionar o valor atual no input, por isso que já havia uma data definida no input.')), codemirror.CodeMirrorHelper ('codemirror6', __kwargtrans__ (dict ({'value': input6_source, 'mode': 'python', 'lineNumbers': true}))), P (I18N ('Com o parâmetro format juntamente com o kind date ou datetime, você pode mudar a máscara, por exemplo, vamos adicionar o formato brasileiro que seria dd/MM/yyyy HH:mm:ss ao atributo format.')), codemirror.CodeMirrorHelper ('codemirror7', __kwargtrans__ (dict ({'value': input7_source, 'mode': 'python', 'lineNumbers': true}))), P (I18N ('Observe o resultado.')), DIV (widgets.Input ('datetime2', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'datetime', value: '02/02/2020 03:12:33', format: 'dd/MM/yyyy HH:mm:ss'})), __kwargtrans__ ({_class: 'widget_input_example'}))), H2 (I18N ('Iconify (icon)')), HR (), P (I18N ('Ao definir um ícone no parâmetro icon do input é adicionado um botão por padrão do lado direito.')), XSECTION (LABEL (I18N ('Example'), ' 01 (icon=I(_class="fab fa-sistrix"))'), P (I18N ('Neste exemplo adicionamos um ícone para um input do tipo pesquisa, ao clicar no ícone aparece um flash.')), DIV (widgets.Input ('iconify', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', icon: I (__kwargtrans__ ({_class: 'fab fa-sistrix'})), icon_on_click: (function __lambda__ () {
			return window.PhanterPWA.flash (__kwargtrans__ (dict ({'html': I18N ('Fui Clicado!')})));
		})})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror8', __kwargtrans__ (dict ({'value': input8_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 02 (I(_class="far fa-calendar-alt") e kind="datetime"))'), P (I18N ('Neste exemplo adicionamos um ícone de calendário, observe que o parâmatro kind é datetime e não iremos adicionar uma ação ao botão, clique e veja o que acontece.')), DIV (widgets.Input ('iconify_datetime', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'datetime', icon: I (__kwargtrans__ ({_class: 'far fa-calendar-alt'}))})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror9', __kwargtrans__ (dict ({'value': input9_source, 'mode': 'python', 'lineNumbers': true})))), XSECTION (LABEL (I18N ('Example'), ' 03 (I(_class="far fa-calendar-alt"), kind="date") e format="dd/MM/yyyy")'), P (I18N ("Como você pode observar, com o kind='date', 'icon' definido e sem uma ação para o icon automaticamente foi utilizado o datetimepicker, agora vamos tentar com o date colocando format='dd/MM/yyyy'.")), DIV (widgets.Input ('iconify_date', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', kind: 'date', icon: I (__kwargtrans__ ({_class: 'far fa-calendar-alt'})), format: 'dd/MM/yyyy', value: '01/03/1980'})), __kwargtrans__ ({_class: 'widget_input_example'})), codemirror.CodeMirrorHelper ('codemirror10', __kwargtrans__ (dict ({'value': input10_source, 'mode': 'python', 'lineNumbers': true})))), __kwargtrans__ ({_class: 'card e-padding_20'})), __kwargtrans__ ({_class: 'new-container'})), __kwargtrans__ ({_class: 'phanterpwa-container p-container'})));
		$ ('#main-container').html (html.jquery ());
	});}
});
export var Selects =  __class__ ('Selects', [object], {
	__module__: __name__,
	get __init__ () {return __get__ (this, function (self, gatehandler) {
		self.gatehandler = gatehandler;
		var html = CONCATENATE (DIV (DIV (DIV (DIV ('COMPONENTES', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), DIV ('SELECT', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), __kwargtrans__ ({_class: 'phanterpwa-breadcrumb-wrapper'})), __kwargtrans__ ({_class: 'p-container'})), __kwargtrans__ ({_class: 'title_page_container card'})), DIV (DIV (DIV (H2 (I18N ('Android Style')), DIV (widgets.Select ('the_select', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', data_set: dict ({'banana': 'Banana', 'abacate': 'Abacate', 'doce': 'Doce'})})), __kwargtrans__ ({_class: 'component_select'})), DIV (DIV (__kwargtrans__ ({_id: 'codemirror-selec1'})), __kwargtrans__ ({_class: 'source_code-codemirror-wrapper'})), DIV (widgets.Select ('the_select2', __kwargtrans__ ({label: 'Label Widget', data_set: dict ({'banana': 'banana', 'abacate': 'abacate', 'doce': 'doce'})})), __kwargtrans__ ({_class: 'component_select'})), DIV (widgets.Select ('the_select3', __kwargtrans__ ({label: 'Label Widget', can_empty: true, data_set: dict ({'banana': 'banana', 'abacate': 'abacate', 'doce': 'doce'})})), __kwargtrans__ ({_class: 'component_select'})), DIV (widgets.Select ('the_select4', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', can_empty: true, data_set: dict ({'banana': 'banana', 'abacate': 'abacate', 'doce': 'doce'})})), __kwargtrans__ ({_class: 'component_select'})), DIV (widgets.Select ('the_select5', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', editable: true, can_empty: true, data_set: dict ({'banana': 'banana', 'abacate': 'abacate', 'doce': 'doce'})})), __kwargtrans__ ({_class: 'component_select'})), DIV (widgets.Select ('the_select6', __kwargtrans__ ({label: 'Label Widget', editable: true, can_empty: true, data_set: dict ({'banana': 'banana', 'abacate': 'abacate', 'doce': 'doce'})})), __kwargtrans__ ({_class: 'component_select'})), H2 (I18N ('Android Style')), DIV (widgets.Select ('the_select7', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', data_set: dict ({'banana': 'Banana', 'abacate': 'Abacate', 'doce': 'Doce'}), wear: 'shadows'})), __kwargtrans__ ({_class: 'component_select'})), DIV (DIV (__kwargtrans__ ({_id: 'codemirror-selec7'})), __kwargtrans__ ({_class: 'source_code-codemirror-wrapper'})), H2 (I18N ('Android elegant')), DIV (widgets.Select ('the_select_elegant8', __kwargtrans__ ({label: 'Label Widget', placeholder: 'Placeholder Widget', data_set: dict ({'banana': 'Banana', 'abacate': 'Abacate', 'doce': 'Doce'}), wear: 'elegant'})), __kwargtrans__ ({_class: 'component_select'})), DIV (DIV (__kwargtrans__ ({_id: 'codemirror-selec1-elegant8'})), __kwargtrans__ ({_class: 'source_code-codemirror-wrapper'})), __kwargtrans__ ({_class: 'card e-padding_20'})), __kwargtrans__ ({_class: 'new-container'})), __kwargtrans__ ({_class: 'phanterpwa-container p-container'})));
		html.html_to ('#main-container');
	});}
});
export var Textarea =  __class__ ('Textarea', [object], {
	__module__: __name__,
	get __init__ () {return __get__ (this, function (self, gatehandler) {
		self.gatehandler = gatehandler;
		var html = CONCATENATE (DIV (DIV (DIV (DIV ('COMPONENTES', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), DIV ('TEXTAREA', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), __kwargtrans__ ({_class: 'phanterpwa-breadcrumb-wrapper'})), __kwargtrans__ ({_class: 'p-container'})), __kwargtrans__ ({_class: 'title_page_container card'})), DIV (DIV (DIV (H2 (I18N ('Textboxs')), HR (), XSECTION (LABEL ('Type: Password'), DIV (widgets.Textarea ('textare1', __kwargtrans__ ({label: 'Label Widget'})), __kwargtrans__ ({_class: 'component_materialize'}))), XSECTION (LABEL ('Type: Password'), DIV (widgets.Textarea ('textare2', __kwargtrans__ ({label: 'Label Widget', wear: 'shadows'})), __kwargtrans__ ({_class: 'component_shadows'}))), XSECTION (LABEL ('Type: Password'), DIV (widgets.Textarea ('textare3', __kwargtrans__ ({label: 'Label Widget', wear: 'elegant'})), __kwargtrans__ ({_class: 'component_shadows'}))), H2 (I18N ('Dropdown')), HR (), XSECTION (LABEL ('Value: True'), DIV (DIV (DIV (widgets.MenuBox ('drop1', __kwargtrans__ ({xml_menu: UL (LI (SPAN ('Editar', __kwargtrans__ ({_class: 'botao_editar_socio'}))), LI (SPAN ('Visualizar', __kwargtrans__ ({_class: 'botao_visualizar_socio'}))), __kwargtrans__ ({_class: 'dropdown-content'}))})), __kwargtrans__ ({_class: 'p-col w1p10'})), DIV (' ', __kwargtrans__ ({_class: 'p-col w1p80'})), DIV (widgets.MenuBox ('drop2', __kwargtrans__ ({xml_menu: UL (LI (SPAN ('Editar', __kwargtrans__ ({_class: 'botao_editar_socio'}))), LI (SPAN ('Visualizar', __kwargtrans__ ({_class: 'botao_visualizar_socio'}))), __kwargtrans__ ({_class: 'dropdown-content'}))})), __kwargtrans__ ({_class: 'p-col w1p10'})), __kwargtrans__ ({_class: 'p-row'})), __kwargtrans__ ({_class: 'component_materialize'}))), H2 (I18N ('Checkbox')), HR (), XSECTION (LABEL ('Value: True'), DIV (widgets.CheckBox ('check1', __kwargtrans__ ({value: true, label: 'Label Widget'})), __kwargtrans__ ({_class: 'component_materialize'}))), XSECTION (LABEL ('Value: False'), DIV (widgets.CheckBox ('check2', __kwargtrans__ ({value: false, label: 'Label Widget'})), __kwargtrans__ ({_class: 'component_materialize'}))), XSECTION (LABEL ('Value: False'), DIV (widgets.CheckBox ('check3', __kwargtrans__ ({value: false, label: 'Label Widget', wear: 'elegant'})), __kwargtrans__ ({_class: 'component_materialize'}))), H2 (I18N ('ListString')), HR (), XSECTION (LABEL ('Value: ["Value01", "Value02", "Value03"]'), DIV (widgets.ListString ('liststring1', __kwargtrans__ ({value: ['Value01', 'Value02', 'Value03'], label: 'Label Widget'})), __kwargtrans__ ({_class: 'component_materialize'}))), XSECTION (LABEL ('data_set: ["Value04", "Value05"] and editable: False'), DIV (widgets.ListString ('liststring2', __kwargtrans__ ({value: ['Value01', 'Value02', 'Value03'], label: 'Label Widget', data_set: ['Value04', 'Value05'], editable: false})), __kwargtrans__ ({_class: 'component_materialize'}))), __kwargtrans__ ({_class: 'card e-padding_20'})), __kwargtrans__ ({_class: 'new-container'})), __kwargtrans__ ({_class: 'phanterpwa-container p-container'})));
		$ ('#main-container').html (html.jquery ());
	});}
});
export var FontAwesome =  __class__ ('FontAwesome', [object], {
	__module__: __name__,
	get __init__ () {return __get__ (this, function (self, gatehandler) {
		self.gatehandler = gatehandler;
		var html = CONCATENATE (DIV (DIV (DIV (DIV ('COMPONENTES', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), DIV ('FONT AWESOME', __kwargtrans__ ({_class: 'phanterpwa-breadcrumb'})), __kwargtrans__ ({_class: 'phanterpwa-breadcrumb-wrapper'})), __kwargtrans__ ({_class: 'p-container'})), __kwargtrans__ ({_class: 'title_page_container card'})), DIV (DIV (DIV (DIV (widgets.Preloaders (), __kwargtrans__ ({_style: 'width:100%; text-align: center; padding-top: 100px; padding-bottom: 100px;'})), __kwargtrans__ ({_id: 'icon_awesome_container', _class: 'icon_awesome_container e-padding_20'})), __kwargtrans__ ({_class: 'card p-row padding_20'})), __kwargtrans__ ({_class: 'phanterpwa-container p-container'})));
		html.html_to ('#main-container');
		$ ('').html (html.jquery ());
		window.PhanterPWA.LOAD (__kwargtrans__ (dict ({'args': ['loads', 'fontawesome.html'], 'onComplete': self._after_load})));
	});},
	get _copy () {return __get__ (this, function (self, el) {
		var p = $ (el).parent ();
		p.find ('input').select ();
		document.execCommand ('copy');
	});},
	get _process_icon () {return __get__ (this, function (self, el) {
		$ ('.icon_awesome_panel_wrapper').css ('display', 'none');
		var p = $ (el).parent ();
		var icon = $ (el).data ('icon');
		var p_html = DIV (DIV (DIV (I (__kwargtrans__ ({_class: 'fas fa-clipboard'})), __kwargtrans__ ({_class: 'copy_buttom'})), INPUT (__kwargtrans__ ({_value: 'I(_class="{0}")'.format (icon)})), __kwargtrans__ ({_class: 'icon_awesome_panel'})), __kwargtrans__ ({_class: 'icon_awesome_panel_wrapper'}));
		if (p.find ('.icon_awesome-panel-container').find ('.icon_awesome_panel_wrapper').length == 0) {
			p.find ('.icon_awesome-panel-container').html (p_html.jquery ());
			p.find ('.copy_buttom').off ('click').on ('click', (function __lambda__ () {
				return self._copy (this);
			}));
		}
		else {
			p.find ('.icon_awesome-panel-container').find ('.icon_awesome_panel_wrapper').remove ();
		}
	});},
	get reload () {return __get__ (this, function (self) {
		self._after_load ();
	});},
	get _after_load () {return __get__ (this, function (self, data) {
		console.log (data);
		XML (data).html_to ('#icon_awesome_container');
		$ ('.icon_awesome-button').off ('click.icon_awesome-wrapper').on ('click.icon_awesome-wrapper', (function __lambda__ () {
			return self._process_icon (this);
		}));
	});}
});

//# sourceMappingURL=handlers.examples.map